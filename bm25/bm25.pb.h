// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bm25/bm25.proto
// Protobuf C++ Version: 5.27.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_bm25_2fbm25_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_bm25_2fbm25_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_bm25_2fbm25_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_bm25_2fbm25_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_bm25_2fbm25_2eproto;
class AvgDocSize;
struct AvgDocSizeDefaultTypeInternal;
extern AvgDocSizeDefaultTypeInternal _AvgDocSize_default_instance_;
class B;
struct BDefaultTypeInternal;
extern BDefaultTypeInternal _B_default_instance_;
class Columns;
struct ColumnsDefaultTypeInternal;
extern ColumnsDefaultTypeInternal _Columns_default_instance_;
class CsvFile;
struct CsvFileDefaultTypeInternal;
extern CsvFileDefaultTypeInternal _CsvFile_default_instance_;
class CsvLineOffsets;
struct CsvLineOffsetsDefaultTypeInternal;
extern CsvLineOffsetsDefaultTypeInternal _CsvLineOffsets_default_instance_;
class DocSizes;
struct DocSizesDefaultTypeInternal;
extern DocSizesDefaultTypeInternal _DocSizes_default_instance_;
class K1;
struct K1DefaultTypeInternal;
extern K1DefaultTypeInternal _K1_default_instance_;
class LargeDfs;
struct LargeDfsDefaultTypeInternal;
extern LargeDfsDefaultTypeInternal _LargeDfs_default_instance_;
class MaxDf;
struct MaxDfDefaultTypeInternal;
extern MaxDfDefaultTypeInternal _MaxDf_default_instance_;
class MinDf;
struct MinDfDefaultTypeInternal;
extern MinDfDefaultTypeInternal _MinDf_default_instance_;
class NumDocs;
struct NumDocsDefaultTypeInternal;
extern NumDocsDefaultTypeInternal _NumDocs_default_instance_;
class TermFreqsLineOffsets;
struct TermFreqsLineOffsetsDefaultTypeInternal;
extern TermFreqsLineOffsetsDefaultTypeInternal _TermFreqsLineOffsets_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class TermFreqsLineOffsets final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TermFreqsLineOffsets) */ {
 public:
  inline TermFreqsLineOffsets() : TermFreqsLineOffsets(nullptr) {}
  ~TermFreqsLineOffsets() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TermFreqsLineOffsets(
      ::google::protobuf::internal::ConstantInitialized);

  inline TermFreqsLineOffsets(const TermFreqsLineOffsets& from) : TermFreqsLineOffsets(nullptr, from) {}
  inline TermFreqsLineOffsets(TermFreqsLineOffsets&& from) noexcept
      : TermFreqsLineOffsets(nullptr, std::move(from)) {}
  inline TermFreqsLineOffsets& operator=(const TermFreqsLineOffsets& from) {
    CopyFrom(from);
    return *this;
  }
  inline TermFreqsLineOffsets& operator=(TermFreqsLineOffsets&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TermFreqsLineOffsets& default_instance() {
    return *internal_default_instance();
  }
  static inline const TermFreqsLineOffsets* internal_default_instance() {
    return reinterpret_cast<const TermFreqsLineOffsets*>(
        &_TermFreqsLineOffsets_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(TermFreqsLineOffsets& a, TermFreqsLineOffsets& b) { a.Swap(&b); }
  inline void Swap(TermFreqsLineOffsets* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TermFreqsLineOffsets* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TermFreqsLineOffsets* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TermFreqsLineOffsets>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TermFreqsLineOffsets& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TermFreqsLineOffsets& from) { TermFreqsLineOffsets::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TermFreqsLineOffsets* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "TermFreqsLineOffsets"; }

 protected:
  explicit TermFreqsLineOffsets(::google::protobuf::Arena* arena);
  TermFreqsLineOffsets(::google::protobuf::Arena* arena, const TermFreqsLineOffsets& from);
  TermFreqsLineOffsets(::google::protobuf::Arena* arena, TermFreqsLineOffsets&& from) noexcept
      : TermFreqsLineOffsets(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated int32 values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::int32_t values(int index) const;
  void set_values(int index, ::int32_t value);
  void add_values(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& values() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_values() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:TermFreqsLineOffsets)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TermFreqsLineOffsets_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int32_t> values_;
    mutable ::google::protobuf::internal::CachedSize _values_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class NumDocs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:NumDocs) */ {
 public:
  inline NumDocs() : NumDocs(nullptr) {}
  ~NumDocs() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NumDocs(
      ::google::protobuf::internal::ConstantInitialized);

  inline NumDocs(const NumDocs& from) : NumDocs(nullptr, from) {}
  inline NumDocs(NumDocs&& from) noexcept
      : NumDocs(nullptr, std::move(from)) {}
  inline NumDocs& operator=(const NumDocs& from) {
    CopyFrom(from);
    return *this;
  }
  inline NumDocs& operator=(NumDocs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NumDocs& default_instance() {
    return *internal_default_instance();
  }
  static inline const NumDocs* internal_default_instance() {
    return reinterpret_cast<const NumDocs*>(
        &_NumDocs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NumDocs& a, NumDocs& b) { a.Swap(&b); }
  inline void Swap(NumDocs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NumDocs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NumDocs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<NumDocs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NumDocs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NumDocs& from) { NumDocs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NumDocs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "NumDocs"; }

 protected:
  explicit NumDocs(::google::protobuf::Arena* arena);
  NumDocs(::google::protobuf::Arena* arena, const NumDocs& from);
  NumDocs(::google::protobuf::Arena* arena, NumDocs&& from) noexcept
      : NumDocs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // uint32 value = 1;
  void clear_value() ;
  ::uint32_t value() const;
  void set_value(::uint32_t value);

  private:
  ::uint32_t _internal_value() const;
  void _internal_set_value(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:NumDocs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NumDocs_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class MinDf final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MinDf) */ {
 public:
  inline MinDf() : MinDf(nullptr) {}
  ~MinDf() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MinDf(
      ::google::protobuf::internal::ConstantInitialized);

  inline MinDf(const MinDf& from) : MinDf(nullptr, from) {}
  inline MinDf(MinDf&& from) noexcept
      : MinDf(nullptr, std::move(from)) {}
  inline MinDf& operator=(const MinDf& from) {
    CopyFrom(from);
    return *this;
  }
  inline MinDf& operator=(MinDf&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MinDf& default_instance() {
    return *internal_default_instance();
  }
  static inline const MinDf* internal_default_instance() {
    return reinterpret_cast<const MinDf*>(
        &_MinDf_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MinDf& a, MinDf& b) { a.Swap(&b); }
  inline void Swap(MinDf* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MinDf* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MinDf* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MinDf>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MinDf& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MinDf& from) { MinDf::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MinDf* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MinDf"; }

 protected:
  explicit MinDf(::google::protobuf::Arena* arena);
  MinDf(::google::protobuf::Arena* arena, const MinDf& from);
  MinDf(::google::protobuf::Arena* arena, MinDf&& from) noexcept
      : MinDf(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // int32 value = 1;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MinDf)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MinDf_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class MaxDf final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MaxDf) */ {
 public:
  inline MaxDf() : MaxDf(nullptr) {}
  ~MaxDf() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MaxDf(
      ::google::protobuf::internal::ConstantInitialized);

  inline MaxDf(const MaxDf& from) : MaxDf(nullptr, from) {}
  inline MaxDf(MaxDf&& from) noexcept
      : MaxDf(nullptr, std::move(from)) {}
  inline MaxDf& operator=(const MaxDf& from) {
    CopyFrom(from);
    return *this;
  }
  inline MaxDf& operator=(MaxDf&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MaxDf& default_instance() {
    return *internal_default_instance();
  }
  static inline const MaxDf* internal_default_instance() {
    return reinterpret_cast<const MaxDf*>(
        &_MaxDf_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MaxDf& a, MaxDf& b) { a.Swap(&b); }
  inline void Swap(MaxDf* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MaxDf* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MaxDf* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MaxDf>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MaxDf& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MaxDf& from) { MaxDf::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MaxDf* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MaxDf"; }

 protected:
  explicit MaxDf(::google::protobuf::Arena* arena);
  MaxDf(::google::protobuf::Arena* arena, const MaxDf& from);
  MaxDf(::google::protobuf::Arena* arena, MaxDf&& from) noexcept
      : MaxDf(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // float value = 1;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:MaxDf)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MaxDf_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class LargeDfs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:LargeDfs) */ {
 public:
  inline LargeDfs() : LargeDfs(nullptr) {}
  ~LargeDfs() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LargeDfs(
      ::google::protobuf::internal::ConstantInitialized);

  inline LargeDfs(const LargeDfs& from) : LargeDfs(nullptr, from) {}
  inline LargeDfs(LargeDfs&& from) noexcept
      : LargeDfs(nullptr, std::move(from)) {}
  inline LargeDfs& operator=(const LargeDfs& from) {
    CopyFrom(from);
    return *this;
  }
  inline LargeDfs& operator=(LargeDfs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LargeDfs& default_instance() {
    return *internal_default_instance();
  }
  static inline const LargeDfs* internal_default_instance() {
    return reinterpret_cast<const LargeDfs*>(
        &_LargeDfs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LargeDfs& a, LargeDfs& b) { a.Swap(&b); }
  inline void Swap(LargeDfs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LargeDfs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LargeDfs* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LargeDfs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LargeDfs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LargeDfs& from) { LargeDfs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LargeDfs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "LargeDfs"; }

 protected:
  explicit LargeDfs(::google::protobuf::Arena* arena);
  LargeDfs(::google::protobuf::Arena* arena, const LargeDfs& from);
  LargeDfs(::google::protobuf::Arena* arena, LargeDfs&& from) noexcept
      : LargeDfs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated string values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  const std::string& values(int index) const;
  std::string* mutable_values(int index);
  void set_values(int index, const std::string& value);
  void set_values(int index, std::string&& value);
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, std::size_t size);
  void set_values(int index, absl::string_view value);
  std::string* add_values();
  void add_values(const std::string& value);
  void add_values(std::string&& value);
  void add_values(const char* value);
  void add_values(const char* value, std::size_t size);
  void add_values(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_values();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:LargeDfs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      23, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LargeDfs_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> values_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class K1 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:K1) */ {
 public:
  inline K1() : K1(nullptr) {}
  ~K1() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR K1(
      ::google::protobuf::internal::ConstantInitialized);

  inline K1(const K1& from) : K1(nullptr, from) {}
  inline K1(K1&& from) noexcept
      : K1(nullptr, std::move(from)) {}
  inline K1& operator=(const K1& from) {
    CopyFrom(from);
    return *this;
  }
  inline K1& operator=(K1&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const K1& default_instance() {
    return *internal_default_instance();
  }
  static inline const K1* internal_default_instance() {
    return reinterpret_cast<const K1*>(
        &_K1_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(K1& a, K1& b) { a.Swap(&b); }
  inline void Swap(K1* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(K1* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  K1* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<K1>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const K1& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const K1& from) { K1::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(K1* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "K1"; }

 protected:
  explicit K1(::google::protobuf::Arena* arena);
  K1(::google::protobuf::Arena* arena, const K1& from);
  K1(::google::protobuf::Arena* arena, K1&& from) noexcept
      : K1(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // float value = 1;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:K1)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_K1_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class DocSizes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:DocSizes) */ {
 public:
  inline DocSizes() : DocSizes(nullptr) {}
  ~DocSizes() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DocSizes(
      ::google::protobuf::internal::ConstantInitialized);

  inline DocSizes(const DocSizes& from) : DocSizes(nullptr, from) {}
  inline DocSizes(DocSizes&& from) noexcept
      : DocSizes(nullptr, std::move(from)) {}
  inline DocSizes& operator=(const DocSizes& from) {
    CopyFrom(from);
    return *this;
  }
  inline DocSizes& operator=(DocSizes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DocSizes& default_instance() {
    return *internal_default_instance();
  }
  static inline const DocSizes* internal_default_instance() {
    return reinterpret_cast<const DocSizes*>(
        &_DocSizes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DocSizes& a, DocSizes& b) { a.Swap(&b); }
  inline void Swap(DocSizes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DocSizes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DocSizes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<DocSizes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DocSizes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DocSizes& from) { DocSizes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DocSizes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "DocSizes"; }

 protected:
  explicit DocSizes(::google::protobuf::Arena* arena);
  DocSizes(::google::protobuf::Arena* arena, const DocSizes& from);
  DocSizes(::google::protobuf::Arena* arena, DocSizes&& from) noexcept
      : DocSizes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated uint32 values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::uint32_t values(int index) const;
  void set_values(int index, ::uint32_t value);
  void add_values(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& values() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_values() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:DocSizes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DocSizes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> values_;
    mutable ::google::protobuf::internal::CachedSize _values_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class CsvLineOffsets final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CsvLineOffsets) */ {
 public:
  inline CsvLineOffsets() : CsvLineOffsets(nullptr) {}
  ~CsvLineOffsets() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CsvLineOffsets(
      ::google::protobuf::internal::ConstantInitialized);

  inline CsvLineOffsets(const CsvLineOffsets& from) : CsvLineOffsets(nullptr, from) {}
  inline CsvLineOffsets(CsvLineOffsets&& from) noexcept
      : CsvLineOffsets(nullptr, std::move(from)) {}
  inline CsvLineOffsets& operator=(const CsvLineOffsets& from) {
    CopyFrom(from);
    return *this;
  }
  inline CsvLineOffsets& operator=(CsvLineOffsets&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CsvLineOffsets& default_instance() {
    return *internal_default_instance();
  }
  static inline const CsvLineOffsets* internal_default_instance() {
    return reinterpret_cast<const CsvLineOffsets*>(
        &_CsvLineOffsets_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CsvLineOffsets& a, CsvLineOffsets& b) { a.Swap(&b); }
  inline void Swap(CsvLineOffsets* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CsvLineOffsets* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CsvLineOffsets* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CsvLineOffsets>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CsvLineOffsets& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CsvLineOffsets& from) { CsvLineOffsets::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CsvLineOffsets* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CsvLineOffsets"; }

 protected:
  explicit CsvLineOffsets(::google::protobuf::Arena* arena);
  CsvLineOffsets(::google::protobuf::Arena* arena, const CsvLineOffsets& from);
  CsvLineOffsets(::google::protobuf::Arena* arena, CsvLineOffsets&& from) noexcept
      : CsvLineOffsets(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated uint32 values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::uint32_t values(int index) const;
  void set_values(int index, ::uint32_t value);
  void add_values(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& values() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_values() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:CsvLineOffsets)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CsvLineOffsets_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::uint32_t> values_;
    mutable ::google::protobuf::internal::CachedSize _values_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class CsvFile final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:CsvFile) */ {
 public:
  inline CsvFile() : CsvFile(nullptr) {}
  ~CsvFile() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CsvFile(
      ::google::protobuf::internal::ConstantInitialized);

  inline CsvFile(const CsvFile& from) : CsvFile(nullptr, from) {}
  inline CsvFile(CsvFile&& from) noexcept
      : CsvFile(nullptr, std::move(from)) {}
  inline CsvFile& operator=(const CsvFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CsvFile& operator=(CsvFile&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CsvFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CsvFile* internal_default_instance() {
    return reinterpret_cast<const CsvFile*>(
        &_CsvFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CsvFile& a, CsvFile& b) { a.Swap(&b); }
  inline void Swap(CsvFile* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CsvFile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CsvFile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CsvFile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CsvFile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CsvFile& from) { CsvFile::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CsvFile* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "CsvFile"; }

 protected:
  explicit CsvFile(::google::protobuf::Arena* arena);
  CsvFile(::google::protobuf::Arena* arena, const CsvFile& from);
  CsvFile(::google::protobuf::Arena* arena, CsvFile&& from) noexcept
      : CsvFile(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // string value = 1;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:CsvFile)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      21, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CsvFile_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class Columns final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Columns) */ {
 public:
  inline Columns() : Columns(nullptr) {}
  ~Columns() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Columns(
      ::google::protobuf::internal::ConstantInitialized);

  inline Columns(const Columns& from) : Columns(nullptr, from) {}
  inline Columns(Columns&& from) noexcept
      : Columns(nullptr, std::move(from)) {}
  inline Columns& operator=(const Columns& from) {
    CopyFrom(from);
    return *this;
  }
  inline Columns& operator=(Columns&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Columns& default_instance() {
    return *internal_default_instance();
  }
  static inline const Columns* internal_default_instance() {
    return reinterpret_cast<const Columns*>(
        &_Columns_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Columns& a, Columns& b) { a.Swap(&b); }
  inline void Swap(Columns* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Columns* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Columns* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Columns>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Columns& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Columns& from) { Columns::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Columns* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "Columns"; }

 protected:
  explicit Columns(::google::protobuf::Arena* arena);
  Columns(::google::protobuf::Arena* arena, const Columns& from);
  Columns(::google::protobuf::Arena* arena, Columns&& from) noexcept
      : Columns(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated string values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  const std::string& values(int index) const;
  std::string* mutable_values(int index);
  void set_values(int index, const std::string& value);
  void set_values(int index, std::string&& value);
  void set_values(int index, const char* value);
  void set_values(int index, const char* value, std::size_t size);
  void set_values(int index, absl::string_view value);
  std::string* add_values();
  void add_values(const std::string& value);
  void add_values(std::string&& value);
  void add_values(const char* value);
  void add_values(const char* value, std::size_t size);
  void add_values(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_values();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:Columns)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      22, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Columns_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> values_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class B final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:B) */ {
 public:
  inline B() : B(nullptr) {}
  ~B() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR B(
      ::google::protobuf::internal::ConstantInitialized);

  inline B(const B& from) : B(nullptr, from) {}
  inline B(B&& from) noexcept
      : B(nullptr, std::move(from)) {}
  inline B& operator=(const B& from) {
    CopyFrom(from);
    return *this;
  }
  inline B& operator=(B&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const B& default_instance() {
    return *internal_default_instance();
  }
  static inline const B* internal_default_instance() {
    return reinterpret_cast<const B*>(
        &_B_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(B& a, B& b) { a.Swap(&b); }
  inline void Swap(B* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(B* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  B* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<B>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const B& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const B& from) { B::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(B* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "B"; }

 protected:
  explicit B(::google::protobuf::Arena* arena);
  B(::google::protobuf::Arena* arena, const B& from);
  B(::google::protobuf::Arena* arena, B&& from) noexcept
      : B(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // float value = 1;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:B)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_B_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};
// -------------------------------------------------------------------

class AvgDocSize final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AvgDocSize) */ {
 public:
  inline AvgDocSize() : AvgDocSize(nullptr) {}
  ~AvgDocSize() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AvgDocSize(
      ::google::protobuf::internal::ConstantInitialized);

  inline AvgDocSize(const AvgDocSize& from) : AvgDocSize(nullptr, from) {}
  inline AvgDocSize(AvgDocSize&& from) noexcept
      : AvgDocSize(nullptr, std::move(from)) {}
  inline AvgDocSize& operator=(const AvgDocSize& from) {
    CopyFrom(from);
    return *this;
  }
  inline AvgDocSize& operator=(AvgDocSize&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AvgDocSize& default_instance() {
    return *internal_default_instance();
  }
  static inline const AvgDocSize* internal_default_instance() {
    return reinterpret_cast<const AvgDocSize*>(
        &_AvgDocSize_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AvgDocSize& a, AvgDocSize& b) { a.Swap(&b); }
  inline void Swap(AvgDocSize* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AvgDocSize* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AvgDocSize* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AvgDocSize>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AvgDocSize& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AvgDocSize& from) { AvgDocSize::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AvgDocSize* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "AvgDocSize"; }

 protected:
  explicit AvgDocSize(::google::protobuf::Arena* arena);
  AvgDocSize(::google::protobuf::Arena* arena, const AvgDocSize& from);
  AvgDocSize(::google::protobuf::Arena* arena, AvgDocSize&& from) noexcept
      : AvgDocSize(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // float value = 1;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:AvgDocSize)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AvgDocSize_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bm25_2fbm25_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DocSizes

// repeated uint32 values = 1;
inline int DocSizes::_internal_values_size() const {
  return _internal_values().size();
}
inline int DocSizes::values_size() const {
  return _internal_values_size();
}
inline void DocSizes::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline ::uint32_t DocSizes::values(int index) const {
  // @@protoc_insertion_point(field_get:DocSizes.values)
  return _internal_values().Get(index);
}
inline void DocSizes::set_values(int index, ::uint32_t value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:DocSizes.values)
}
inline void DocSizes::add_values(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:DocSizes.values)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& DocSizes::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:DocSizes.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DocSizes::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:DocSizes.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
DocSizes::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* DocSizes::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// LargeDfs

// repeated string values = 1;
inline int LargeDfs::_internal_values_size() const {
  return _internal_values().size();
}
inline int LargeDfs::values_size() const {
  return _internal_values_size();
}
inline void LargeDfs::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline std::string* LargeDfs::add_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add_mutable:LargeDfs.values)
  return _s;
}
inline const std::string& LargeDfs::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:LargeDfs.values)
  return _internal_values().Get(index);
}
inline std::string* LargeDfs::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:LargeDfs.values)
  return _internal_mutable_values()->Mutable(index);
}
inline void LargeDfs::set_values(int index, const std::string& value) {
  _internal_mutable_values()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:LargeDfs.values)
}
inline void LargeDfs::set_values(int index, std::string&& value) {
  _internal_mutable_values()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:LargeDfs.values)
}
inline void LargeDfs::set_values(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_values()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:LargeDfs.values)
}
inline void LargeDfs::set_values(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_values()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LargeDfs.values)
}
inline void LargeDfs::set_values(int index, absl::string_view value) {
  _internal_mutable_values()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:LargeDfs.values)
}
inline void LargeDfs::add_values(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:LargeDfs.values)
}
inline void LargeDfs::add_values(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:LargeDfs.values)
}
inline void LargeDfs::add_values(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:LargeDfs.values)
}
inline void LargeDfs::add_values(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:LargeDfs.values)
}
inline void LargeDfs::add_values(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:LargeDfs.values)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LargeDfs::values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:LargeDfs.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LargeDfs::mutable_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:LargeDfs.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LargeDfs::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LargeDfs::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// CsvLineOffsets

// repeated uint32 values = 1;
inline int CsvLineOffsets::_internal_values_size() const {
  return _internal_values().size();
}
inline int CsvLineOffsets::values_size() const {
  return _internal_values_size();
}
inline void CsvLineOffsets::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline ::uint32_t CsvLineOffsets::values(int index) const {
  // @@protoc_insertion_point(field_get:CsvLineOffsets.values)
  return _internal_values().Get(index);
}
inline void CsvLineOffsets::set_values(int index, ::uint32_t value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:CsvLineOffsets.values)
}
inline void CsvLineOffsets::add_values(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:CsvLineOffsets.values)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& CsvLineOffsets::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:CsvLineOffsets.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* CsvLineOffsets::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:CsvLineOffsets.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
CsvLineOffsets::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* CsvLineOffsets::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// NumDocs

// uint32 value = 1;
inline void NumDocs::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0u;
}
inline ::uint32_t NumDocs::value() const {
  // @@protoc_insertion_point(field_get:NumDocs.value)
  return _internal_value();
}
inline void NumDocs::set_value(::uint32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:NumDocs.value)
}
inline ::uint32_t NumDocs::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void NumDocs::_internal_set_value(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// MinDf

// int32 value = 1;
inline void MinDf::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline ::int32_t MinDf::value() const {
  // @@protoc_insertion_point(field_get:MinDf.value)
  return _internal_value();
}
inline void MinDf::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:MinDf.value)
}
inline ::int32_t MinDf::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void MinDf::_internal_set_value(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// MaxDf

// float value = 1;
inline void MaxDf::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline float MaxDf::value() const {
  // @@protoc_insertion_point(field_get:MaxDf.value)
  return _internal_value();
}
inline void MaxDf::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:MaxDf.value)
}
inline float MaxDf::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void MaxDf::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// AvgDocSize

// float value = 1;
inline void AvgDocSize::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline float AvgDocSize::value() const {
  // @@protoc_insertion_point(field_get:AvgDocSize.value)
  return _internal_value();
}
inline void AvgDocSize::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:AvgDocSize.value)
}
inline float AvgDocSize::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void AvgDocSize::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// K1

// float value = 1;
inline void K1::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline float K1::value() const {
  // @@protoc_insertion_point(field_get:K1.value)
  return _internal_value();
}
inline void K1::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:K1.value)
}
inline float K1::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void K1::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// B

// float value = 1;
inline void B::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline float B::value() const {
  // @@protoc_insertion_point(field_get:B.value)
  return _internal_value();
}
inline void B::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:B.value)
}
inline float B::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void B::_internal_set_value(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// CsvFile

// string value = 1;
inline void CsvFile::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& CsvFile::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:CsvFile.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CsvFile::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:CsvFile.value)
}
inline std::string* CsvFile::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:CsvFile.value)
  return _s;
}
inline const std::string& CsvFile::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void CsvFile::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* CsvFile::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* CsvFile::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:CsvFile.value)
  return _impl_.value_.Release();
}
inline void CsvFile::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:CsvFile.value)
}

// -------------------------------------------------------------------

// Columns

// repeated string values = 1;
inline int Columns::_internal_values_size() const {
  return _internal_values().size();
}
inline int Columns::values_size() const {
  return _internal_values_size();
}
inline void Columns::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline std::string* Columns::add_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add_mutable:Columns.values)
  return _s;
}
inline const std::string& Columns::values(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Columns.values)
  return _internal_values().Get(index);
}
inline std::string* Columns::mutable_values(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Columns.values)
  return _internal_mutable_values()->Mutable(index);
}
inline void Columns::set_values(int index, const std::string& value) {
  _internal_mutable_values()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:Columns.values)
}
inline void Columns::set_values(int index, std::string&& value) {
  _internal_mutable_values()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:Columns.values)
}
inline void Columns::set_values(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_values()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Columns.values)
}
inline void Columns::set_values(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_values()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Columns.values)
}
inline void Columns::set_values(int index, absl::string_view value) {
  _internal_mutable_values()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:Columns.values)
}
inline void Columns::add_values(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:Columns.values)
}
inline void Columns::add_values(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:Columns.values)
}
inline void Columns::add_values(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Columns.values)
}
inline void Columns::add_values(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Columns.values)
}
inline void Columns::add_values(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:Columns.values)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Columns::values() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Columns.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Columns::mutable_values() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Columns.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Columns::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Columns::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// TermFreqsLineOffsets

// repeated int32 values = 1;
inline int TermFreqsLineOffsets::_internal_values_size() const {
  return _internal_values().size();
}
inline int TermFreqsLineOffsets::values_size() const {
  return _internal_values_size();
}
inline void TermFreqsLineOffsets::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline ::int32_t TermFreqsLineOffsets::values(int index) const {
  // @@protoc_insertion_point(field_get:TermFreqsLineOffsets.values)
  return _internal_values().Get(index);
}
inline void TermFreqsLineOffsets::set_values(int index, ::int32_t value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:TermFreqsLineOffsets.values)
}
inline void TermFreqsLineOffsets::add_values(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:TermFreqsLineOffsets.values)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& TermFreqsLineOffsets::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TermFreqsLineOffsets.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<::int32_t>* TermFreqsLineOffsets::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TermFreqsLineOffsets.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
TermFreqsLineOffsets::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* TermFreqsLineOffsets::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_bm25_2fbm25_2eproto_2epb_2eh
